/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers.
 */

body {
  margin: 0;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * Remove the gray background on active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10.
 */

img {
  border-style: none;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */

[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */

details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Misc
   ========================================================================== */

/**
 * Add the correct display in IE 10+.
 */

template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */

[hidden] {
  display: none;
}

/* CSS file for defining reusable variables in other CSS files. */

/* This file will be imported in the main styles.css file.      */

/* Define a mixin that will use a media query to handle small screens */

/* Define a mixin that will use a media query to handle medium screens */

/* Define a mixin that will use a media query to handle large screens */

/* This mixin adds some pseudo (or "fake") content with CSS. That allows for the use     */

/* of additional CSS to do something else; in this case, we are clearing the float in    */

/* both directions and displaying in a table format. This fixes the all-floating problem */

/* as described in _row.css where using floats everywhere causes the div to not know     */

/* about its height, which messes up layout in the vertical dimension.                   */

/*                                                                                       */

/* This selector will add blank space after all the content in the main row div, which   */

/* fixes the all-floating issue.                                                         */

/* Body element */

body {
	/* Font to use, with a fall-back if it's not found */
	font-family: 'Roboto', sans-serif;
	color: #333;  /* Dark gray */
}

/* Target all images on the page to restrict their dimensions to fit the page */

img {
	max-width: 100%;
	height: auto;
}

/* This rule has a selector ("*") that selects every element on the page. */

/* This applies a border box to all elements, which takes padding out of  */

/* the column width percentage calculation.                               */

* {
	-webkit-box-sizing: border-box;
	        box-sizing: border-box;
}

/* This rule selects all links on a page. */

a {
	color: #D59541;
}

/* This has to be after variables because it uses variable names defined above */

/* CSS to control the large-hero class div in index.html */

/* Note that the leading underscore in the file name indicates that this is */

/* a partial file and will not be used standalone, but instead, will be imported */

/* into another CSS file. */

.large-hero {
	border-bottom: 10px solid #2F5572; /* Adds a blue border at the bottom of the image section */
	position: relative;
	
	/* By default, browsers treat images as inline - just like a line of text, so room is left */
	/* for text descenders. A block image is treated more like a div element, which is a perfectly- */
	/* aligned rectangle; in other words, no extra room. By making this a block image, the white gap */
	
	/* Example of using nested CSS to help with organization */
}

/* between the image and the border is removed. */

.large-hero__image {
		display: block;
	}

/* in this case, is .large_hero                             */

.large-hero__text-content {
	    position: absolute;
	    top: 50%;
	    -webkit-transform: translateY(-50%);
	            transform: translateY(-50%);  /* Positions an element vertically, relative to itself */
	    left: 0;
	    width: 100%;
	    text-align: center;
    }

/* The "&" gets translated to the root selector, which   */

.large-hero__title {
	    font-weight: 300;
		margin: 0;
	    color: #2F5572;  /* Dark Blue */
		font-size: 2.4rem;		
    }

@media (min-width: 530px) {

.large-hero__title {
			font-size: 4.8rem		
    }
	}

/* would normally create).                               */

.large-hero__subtitle {
	    font-weight: 300;
    	color: #2F5572;  /* Dark Blue */
	    font-size: 1.5rem;		
		margin: 0;
    }

@media (min-width: 530px) {

.large-hero__subtitle {
			font-size: 2.9rem
    }
	}

/* without using decendent selectors (which is what Gulp */

.large-hero__description {
		color: #FFFFFF;     /* White */
		font-size: 1.1rem; /* Use this as the default font */
		font-weight: 100;
		text-shadow: 2px 2px 0 rgba(0, 0, 0, .1);  /* Black w/ alpha of .1 means 10% visible */
		max-width: 30rem;  /* Measured to be 480px: 480/16 = 30rem */
		margin-left: auto;
		margin-right: auto;
		
	}

@media (min-width: 530px) {

.large-hero__description {
			font-size: 1.875rem /* Use this for small screens or larger */
		
	}
	}

.btn {
	background-color: #2F5572; /* Dark Blue */
	color: #FFFFFF;           /* White     */
	text-decoration:none;        /* This will remove the underline from the href link */
	padding: .75rem 1.2rem;      /* .75rem -> top and bottom padding; 1.2rem -> left and right padding */
	display: inline-block;       /* Make parent and surronding elements aware of this vertical padding */
	
	/* Modifier rule for an orange button. Note that here, we use 2 dashes instead of 2 underscores,   */
}

/* because the 2 dashes is what defines this as a BEM modifier rule.                               */

.btn--orange {
		background-color: #D59541;
    }

/* Modifier rule for a large button. */

.btn--large {
		padding: 1.1rem 1.9rem;
	}

@media (min-width: 530px) {

.btn--large {
			font-size: 1.25rem /* There is no font-size above, so it will default to 1rem */
	}
	}

.wrapper {
	overflow: hidden;  /* Hides anything that bleeds over the edge of the div */
	padding-left: 18px;
	padding-right: 18px;
	max-width: 1236px;   /* Account for padding in max width: 1200 + 18 + 18 = 1236 */
	margin-left: auto;
	margin-right: auto;	
}

.wrapper--medium {
		max-width: 980px;
	}

.wrapper--no_padding-until-medium {
		/* Here, we need to offset the padding-left and padding-right settings from */
		/* the main wrapper class.                                                  */
		padding-left: 0;
		padding-right: 0;
	}

@media (min-width: 800px) {

.wrapper--no_padding-until-medium {
			/* For medium and larger screens, we want to add the padding back in. */
			padding-left: 18px;
			padding-right: 18px
	}
	}

.wrapper--no_padding-until-large {
		/* Here, we need to offset the padding-left and padding-right settings from */
		/* the main wrapper class.                                                  */
		padding-left: 0;
		padding-right: 0;
	}

@media (min-width: 1010px) {

.wrapper--no_padding-until-large {
			/* For medium and larger screens, we want to add the padding back in. */
			padding-left: 18px;
			padding-right: 18px
	}
	}

/* This gets rid of extra padding in a nested wrapper. */

.wrapper .wrapper {
		padding-left: 0;
		padding-right: 0;
	}

/* This defines a wrapper within a wrapper. */

.wrapper--btm-margin {
		margin-bottom: 1rem;
	}

@media (min-width: 530px) {

.wrapper--btm-margin {
			margin-bottom: 3.75rem
	}
	}

/* This class is for creating top and bottom padding to a section. */

.page-section {
	
	padding: 1.2rem 0;
}

/* First arg is top/bottom padding; 2nd is left/right, which we don't need */

@media (min-width: 800px) {

.page-section {
		padding: 4.5rem 0
}
	}

/* Rule to use bottom padding only on medium or larger screens. */

.page-section--no-btm-padding-until-medium {
		padding-bottom: 0;
	}

@media (min-width: 800px) {

.page-section--no-btm-padding-until-medium {
			padding-bottom: 4.5rem
	}
	}

/* Rule to use bottom padding only on large or larger screens. */

.page-section--no-btm-padding-until-large {
		padding-bottom: 0;
	}

@media (min-width: 1010px) {

.page-section--no-btm-padding-until-large {
			padding-bottom: 4.5rem
	}
	}

.page-section--blue {
		background-color: #2F5572;
		color: #FFFFFF;
    }

.page-section--testimonials {
		background-color: #E0E6EF;
	}

@media (min-width: 1010px) {

.page-section--testimonials {
		/* Loading a background image from the specified URL.                              */
		/* Aligning towards the top of the section vertically and centered horizontally.   */
		/* Tell the image to not repeat (i.e. use a single copy of the image; no tiling).  */
		/* The background size setting tells the image to shrink or stretch to always      */
		/* perfectly cover the background div.                                             */
		/* Note that we only want this image on large or larger screens, so it is located  */
		/* within this mixin.                                                              */
		background: url('/assets/images/testimonials-bg.jpg') top center no-repeat;
		background-size: cover
	}
	}

.headline {
	font-weight: 300;
	font-size: 1.9rem;
	color: #2F5572;
}

@media (min-width: 530px) {

.headline {
		font-size: 2.875rem
}
	}

.headline--centered {
		text-align: center;
	}

.headline--orange {
		color: #D59541;
	}

.headline--small {
		font-size: 1.2rem;
	}

@media (min-width: 530px) {

.headline--small {
			font-size: 1.875rem
	}
	}

.headline--narrow {
		max-width: 500px;
		margin-left: auto;
		margin-right: auto;
	}

.headline--light {
		font-weight: 100;
	}

.headline--btm-margin-small {
		margin-bottom: .5em;  /* Use em instead of rem because it's relative to the font size itself */
	}

.headline--btm-margin-large {
		margin-bottom: 1.6em;
	}

.headline--no-top-margin {
		margin-top: 0;
	}

.row {	
	
	/* The float attribute being used below takes the element out of the flow of the page.   */
	/* That is fine if only a few elements float, but if everything floats, the parent div   */
	/* has no idea how tall it is, which causes the following section to ride up into the    */
	/* element with the clear floats.                                                        */
	/*                                                                                       */
	/* To avoid this, we could add an empty div in the html markup whose only job would be   */
	/* to define a modifier pointing to a rule where we could use "clear: both" to clear the */
	/* float for one element. With at least one non-floating element, the height layout      */
	/* issue is resolved.                                                                    */
	/*                                                                                       */
	/* However, it's never a good idea to add an empty element that exists only for styling  */
	/* purposes.                                                                             */
	/*                                                                                       */
	/* The better way to handle this is to add some pseudo (or "fake") content with CSS as   */
	/* is being done in the clearfix mixin (see _mixins.css to see the CSS code for this).   */
	
	/* Give an image bottom margin when its really small, up until it becomes medium sized. */
	
	/* Set up multi-column display for medium and larger screens, but ensure full-width single */
	/* column with stacked content for smaller screens. This uses the atMedium mixin, which    */
	
	/* Set up multi-column display for large and larger screens, but ensure full-width single */
	/* column with stacked content for smaller screens. This uses the atMedium mixin, which    */
	
	/* This creates a modifier rule that selects/affects all direct children with a div tag. */
	/* In other words, all the columns of the layout.                                        */
	/* This extra padding will be tacked onto the __4 and __8 column defs above, which will  */
	/* cause a column wrap because the columns will now take up more than 100% of the width. */
	/* So, the column percentages must be recalculated to account for the padding.           */
	/* Or, we can also use a border-box to cause the browser to take the padding out of the  */
	/* width calculations, thus using the original widths.                                   */
}

/* div, which fixes the all-floating issue.                                              */

.row::after {
		content: "";
		clear: both;
		display: table;
	}

/* The selector in the mixin will add blank space after all the content in the main row  */

.row--top-padding {
		padding-top: 80px;
	}

/* The at medium part of this is handled in the mixin below.                            */

.row__btm_margin_until_medium {
		margin-bottom: 1rem;
	}

/* defines (in _mixins.css) a media query for medium screens.                              */

@media (min-width: 800px) {
		
		.row__btm_margin_until_medium {
			margin-bottom: 0;
		}
		
		.row__medium-4 {		
			float: left;
			width: 33.33%;
		}
		
		.row__medium-4--larger {
			width: 37%;
		}
		
		.row__medium-6 {		
			float: left;
			width: 50%;
		}
		
		.row__medium-8 {
			float: left;
			width: 66.67%;						
		}
		
		.row__medium-8--smaller {
			width: 63%;
		}
	}

/* defines (in _mixins.css) a media query for medium screens.                              */

@media (min-width: 1010px) {
		
		.row__btm_margin_until_large {
			margin-bottom: 0;
		}
		
		.row__large-4 {		
			float: left;
			width: 33.33%;
		}
		
		.row__large-4--larger {
			width: 37%;
		}
		
		.row__large-6 {		
			float: left;
			width: 50%;
		}
		
		.row__large-8 {
			float: left;
			width: 66.67%;						
		}
		
		.row__large-8--smaller {
			width: 63%;
		}
	}

/* are good to go!                                                                       */

.row--gutters > div {
		padding-right: 65px;		
	}

/* hide the overflow and we will be golden.                                             */

.row--gutters {
		margin-right: -65px;
	}

/* element to bleed over the edge of the parent div, so in the .wrapper rule, we need   */

.row--gutters-large > div {
		padding-right: 100px;		
	}

/* the final column to have to not have any padding. However, this will cause the       */

.row--gutters-large {
		margin-right: -100px;
	}

/* while not affecting the ratio of the columns, which is what would happen if you told */

.row--gutters-small > div {
		padding-right: 45px;
	}

/* This counter-acts the above rule so that the right-most column has no right padding, */

.row--gutters-small {
		margin-right: -45px;
	}

/* Begin Equal Height Rules */

.row--equal-height-at-medium {
		
		/* Select direct descendants that have a type tag of div. */
		/* This selects all of the columns within the parent div. */
	}

@media (min-width: 800px) {

.row--equal-height-at-medium {
			display: -webkit-box;
			display: -ms-flexbox;
			display: flex  /* Use flexbox; this does nothing on its own w/o doing same to each col below */
	}
	}

/* This tells all columns to use flexbox.                 */

.row--equal-height-at-medium > div {
			float: none;
			display: -webkit-box;
			display: -ms-flexbox;
			display: flex;
		}

/* Since we have defined a border-box for every element on the page in _global.css, we   */

.row--equal-height-at-large {
		
		/* Select direct descendants that have a type tag of div. */
		/* This selects all of the columns within the parent div. */
	}

@media (min-width: 1010px) {

.row--equal-height-at-large {
			display: -webkit-box;
			display: -ms-flexbox;
			display: flex  /* Use flexbox; this does nothing on its own w/o doing same to each col below */
	}
	}

/* This tells all columns to use flexbox.                 */

.row--equal-height-at-large > div {
			float: none;
			display: -webkit-box;
			display: -ms-flexbox;
			display: flex;
		}

.generic-content-container {
	
	/* This rule selects any links within a paragraph element.  */
	/* This is formatted this way, so we don't have to use more */
}

/* This rule selects any paragraph elements that are nested within the element with this modifier. */

.generic-content-container p {
		font-weight: 300;
		line-height: 1.65;    /* no unit of measurement for this attribute */		
		margin: 0 0 1.8rem 0; /* top, right, bottom, left */
		
		/* Define a font size for small and larger screens. There is no default font size */
	}

/* defined above, so it defaults to 1rem.                                         */

@media (min-width: 530px) {

.generic-content-container p {
			font-size: 1.125rem
	}
	}

/* than 1 level of nesting.                                 */

.generic-content-container p a {
		font-weight: 700; /* A font-weight of 400 is considered normal */
		                  /* The orange color of the link will be defined globally in _global.css */
						  /* We always want links to be orange, but some may be bold, while other */
						  /* may be a different font weight, so keep the bold font weight for the */
						  /* specific paragraph here instead of defining it globally.             */
						  /* One of the BEM big ideas is to use very few global selectors, and to */
						  /* be very picky about what goes into _global.css                       */
	}

.section-title {
	font-size: 2.55rem;
	font-weight: 300;
	text-align: center;
}

/* This mixin targets Small or larger screens. */

@media (min-width: 530px) {

.section-title {
		font-size: 3.75rem
}
	}

/* Targets and strong tags nested within the section-title class */

.section-title strong {
		font-weight: 500;
	}

.section-title--blue {
		color: #2F5572;
	}

.section-title__icon {					
		display: block;     /* This will drop any trailing text to a new line */
		margin-left: auto;
		margin-right: auto; /* Auto margins keep the icon horizontally centered */
		margin-bottom: .6rem;
	}

@media (min-width: 530px) {

.section-title__icon {
			position: relative;
			top: 8px;
			margin-left: 0;
			margin-right: .5rem;
			margin-bottom: 0;
			display: inline-block /* Don't drop trailing text to a new line on larger screens */
	}
	}

.feature-item {
	position: relative;	
	padding-bottom: 2.5rem;	
}

/* we need to specify relative positioning for the parent block. */

.feature-item__icon {
		display: block;
		margin: 0 auto;
	}

@media (min-width: 530px) {

.feature-item__icon {
			position: absolute;
			left: 0
	}
	}

/* Because we are setting an absolute position for the icon relative to its parent, */

.feature-item__title {
		font-size: 1.6rem;
		font-weight: 300;
		margin-top: .7em;
		margin-bottom: .8rem;
		text-align: center;
	}

@media (min-width: 530px) {

.feature-item__title {
			text-align: left;
			margin-top: 1em;
			font-size: 1.875rem
	}
	}

/* Make the image and text sit side-by-side */

@media (min-width: 530px) {

.feature-item {
		padding-left: 95px	
}
	}

.testimonial {
	background-color: rgba(255, 255, 255, .8); /* Alpha values are specified from 0 to 1 */
	padding: 0 18px 1px 18px;
	margin-bottom: 98px;
}

/* or larger screens. */

@media (min-width: 1010px) {

.testimonial {
		/* Top, Right, Bottom, Left */
		/* The bottom padding of 1px gives the paragraph */
		/* bottom padding (define elsewhere) somewhere to go. */
		padding: 0 1.875rem 1px 1.875rem;
		
		/* Zero-out the bottom margin for medium or larger screens. */
		margin-bottom: 0
}
	}

/* page section element. */

.testimonial--last {
		margin-bottom: 0;
	}

/* the last testimonial. The rest of it must be removed from the testimonial's */

.testimonial__photo {
		/* Creates rounded corners - radius should be 1/2 of length of the image to make it a circle. */
		/* The overflow of hidden is needed to make the rounded corners show. */
		border-radius: 80px;   
		overflow: hidden;      
		
		/* Needed to allow the right hand corners to show properly. */
		/* (the parent div uses the full available width, so you can't see the right-hand rounded corners). */
		/* Specifying the div's width and height equal to the size of the image, fixes this. */
		width: 160px;          
		height: 160px;         		                       
							   
		/* Top, Left, Bottom, Right; left and right of auto centers horizontally. */
		/* The -80px bottom margin counteracts the -80px top placement below so the rest of the */
		/* block's contents know to move up along with the image; without this, they think the */
		/* image still sits at its old location and a big gap between image and text exists. */
		margin: 0 auto -80px auto; 
		
		/* These two settings allow for relative placement of the image. */
		/* The negative placement here, places the image halfway out of the top edge. */
		position: relative;    
		top: -80px;            
		
		/* Gives the image a solid border of the same color as the block's background */
		border: 6px solid rgba(255, 255, 255, .8);			
	}

/* This gets rid of (most) of the light blue background at the bottom of */

.testimonial__title {
		color: #2F5572;
		text-align: center;
		font-size: 1.5rem;
		font-weight: 500;
		margin: 0;
	}

/* Create a mixin that specifies testimonial paragraph padding only for large */

.testimonial__subtitle {
		color: #D59541;
		text-align: center;
		font-size: 1rem;
		font-weight: 400;
		margin: .25rem 0 1rem 0;
	}
